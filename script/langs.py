import script.constants as constants,math;
from rich.text import Text;
from rich.panel import Panel;
from rich.console import Console;
console = Console()
langsBook = {
    "pt-br": {
    "header": f"[bold]--- MyPass {constants.getVersion()} ---[/bold]",
    "usage": "Uso: passmanager [COMANDO] [ARGUMENTOS]",
    "commands_title": "Comandos Principais:",
    "commands_footer": "P√°gina ",
    
    # Comandos de Ajuda e Visualiza√ß√£o
    "cmd_desc_help": "help <p√°gina>\n  Mostra os comandos do script.",
    "cmd_desc_list_accounts": " Lista todas as contas que voc√™ pode selecionar.",
    "cmd_desc_current": "current\n  Mostra qual conta est√° selecionada no momento.",
    "cmd_desc_list_services": "Mostra os servi√ßos da conta ativa. Use a flag --reveal para tamb√©m exibir as senhas.",
    "cmd_desc_copy": "copy --service <servi√ßo> ou --id <id>\n  Copia a senha de determinado servi√ßo da conta ativa.",
    
    # Comandos de Gerenciamento de Contexto e Idioma
    "cmd_desc_select": "select <conta>\n  Define a conta ativa para os comandos seguintes.",
    "cmd_desc_lang": "lang <idioma>\n  Muda o idioma da interface (ex: pt-br, en-us).",  # NOVO
    
    # Comandos de Edi√ß√£o e Adi√ß√£o
    "cmd_desc_add": "Adiciona um novo servi√ßo √† conta ativa, e permite adicionar uma senha.",
    "cmd_desc_add_account": "Adiciona uma nova conta a aplica√ß√£o.",
    "cmd_desc_add_account_email": "Adiciona um email a conta que est√° sendo criada",
    "cmd_desc_edit_service": "edit service [--service] <servi√ßo> [--id <id>] [--password <senha>]\n  Edita um servi√ßo e seus dados da conta ativa.",
    "cmd_desc_edit_account": "Edita uma conta e seus dados.",
    "cmd_desc_edit_account_idname":"O ID ou nome da conta a ser buscada",
    "cmd_desc_edit_account_name":"Novo nome da conta (Opcional)",
    "cmd_desc_edit_account_email":"Novo email da conta (Opcional)",
    # Comandos de Dele√ß√£o (PERIGOSOS!)
    "cmd_desc_delete_service": "delete service --service <servi√ßo> ou --id <id>\n  Deleta um servi√ßo espec√≠fico da conta ativa.", # NOVO
    "cmd_desc_delete_account": "delete account <conta>\n  DELETA PERMANENTEMENTE uma conta e todas as senhas nela. (CUIDADO!)", # NOVO
    
    # Mensagens de Status
    "error_no_page": "[red]‚ùå P√°gina n√£o encontrada! Tente de 1...{max_page}[/red]",
    "error_no_account_listed":"[white]üí§ [khaki1]Nenhuma conta encontrada![/khaki1] Use [grey54]<mypass add account>[/grey54] para adicionar uma conta![/white]",
    "error_no_context": "‚ùå Erro: Nenhuma conta selecionada. Use 'passmanager select <conta>' para definir um contexto.",
    "success_account_create": "‚úÖ Usu√°rio criado com succeso:[bold] {account}, {email}[/bold]",
    "success_context_set": "‚úÖ Contexto definido para: {account}",
    "error_general": "[bold red]‚ùå Erro: Erro inesperado[/bold red]",
    "double_account":"[red]J√° existe uma conta com esse nome! Deseja continuar?[/red]\n(y) Sim; (n) N√£o",
    # Constantes
    "no_email":"[bold gold1]<sem email registrado>[/bold gold1]",
    "id_word":"Id",
    'name_word':"Conta",
    'email_word':"Email"
}
}

class langManager:
    def __init__(self,lang,book):
        self.lang = lang
        self.langsBook = book
        pass
    def changeLang(self,newlang):
        self.lang = newlang

    def getWord(self,wordIndex):
        return self.langsBook[self.lang][wordIndex]

    def getHelpMenu(self,page=1):
        context = self.langsBook[self.lang]
        numPerPage = 5
        
        commands = [value for key, value in context.items() if "cmd_desc" in key]
        maxPage = math.ceil(len(commands)/numPerPage) if commands else 1
        if(page>maxPage or page<1):
            return Text(self.langsBook[self.lang]["error_no_page"],style='Bold Red')
        minIndex = (page-1)*numPerPage
        maxIndex = minIndex+numPerPage
        thisCommands = commands[minIndex:maxIndex]
        menu = Text()
        for i in thisCommands:
            temp = i.split("\n")
            name = temp[0]
            desc = temp[1]
            menu.append(f"  {name}", style="bold cyan")
            menu.append(f"{desc}\n", style="white")
        footer = Text(f"{context["commands_footer"]}{page}...{maxPage}",justify="right",style="dim")
        
        output = Panel(Text("\n").join([menu,footer]),title=f"‚úÖ [bold]{context['commands_title']}[/bold] ‚úÖ",border_style="white",padding=(1,1)) 
        
        return output

manager = langManager("pt-br",langsBook)